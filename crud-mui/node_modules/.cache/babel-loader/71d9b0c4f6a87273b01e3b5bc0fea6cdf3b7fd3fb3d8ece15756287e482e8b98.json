{"ast":null,"code":"var _jsxFileName = \"/home/kunalchand/Desktop/Projects/Others/crud-react-app/crud-mui/src/DataTable.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Table from \"./Table\";\nimport ToolBar from \"./ToolBar\";\nimport initialData from \"./initialData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataTable() {\n  _s();\n  const [data, setData] = useState(initialData);\n  const [filterText, setFilterText] = useState(\"\");\n  const [newRow, setNewRow] = useState(null);\n  function handleSave({\n    id,\n    name,\n    age\n  }) {\n    if (id === \"new\") {\n      const maxId = Math.max(...data.map(item => item.id));\n      const newId = maxId + 1;\n      setData([...data, {\n        id: newId,\n        name,\n        age\n      }]);\n      setNewRow(null);\n    } else {\n      const updatedData = data.map(item => item.id === id ? {\n        id,\n        name,\n        age\n      } : item);\n      setData(updatedData);\n    }\n  }\n  function handleDelete(id) {\n    if (id === \"new\") {\n      setNewRow(null);\n    } else {\n      const filteredData = data.filter(item => item.id !== id);\n      setData(filteredData);\n    }\n  }\n  function handleAdd() {\n    setNewRow({\n      id: \"new\",\n      name: \"\",\n      age: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToolBar, {\n      filterText: filterText,\n      onFilterTextChange: setFilterText,\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: data,\n      filterText: filterText,\n      onSave: handleSave,\n      onDelete: handleDelete,\n      newRow: newRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"Cuo4HkL1urai5EsqjwjGvRadqFE=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["useState","Table","ToolBar","initialData","jsxDEV","_jsxDEV","DataTable","_s","data","setData","filterText","setFilterText","newRow","setNewRow","handleSave","id","name","age","maxId","Math","max","map","item","newId","updatedData","handleDelete","filteredData","filter","handleAdd","children","onFilterTextChange","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onDelete","_c","$RefreshReg$"],"sources":["/home/kunalchand/Desktop/Projects/Others/crud-react-app/crud-mui/src/DataTable.js"],"sourcesContent":["import { useState } from \"react\";\nimport Table from \"./Table\";\nimport ToolBar from \"./ToolBar\";\nimport initialData from \"./initialData.json\";\n\nfunction DataTable() {\n  const [data, setData] = useState(initialData);\n  const [filterText, setFilterText] = useState(\"\");\n  const [newRow, setNewRow] = useState(null);\n\n  function handleSave({ id, name, age }) {\n    if (id === \"new\") {\n      const maxId = Math.max(...data.map((item) => item.id));\n      const newId = maxId + 1;\n      setData([...data, { id: newId, name, age }]);\n      setNewRow(null);\n    } else {\n      const updatedData = data.map((item) =>\n        item.id === id ? { id, name, age } : item\n      );\n      setData(updatedData);\n    }\n  }\n\n  function handleDelete(id) {\n    if (id === \"new\") {\n      setNewRow(null);\n    } else {\n      const filteredData = data.filter((item) => item.id !== id);\n      setData(filteredData);\n    }\n  }\n\n  function handleAdd() {\n    setNewRow({ id: \"new\", name: \"\", age: \"\" });\n  }\n\n  return (\n    <div>\n      <ToolBar\n        filterText={filterText}\n        onFilterTextChange={setFilterText}\n        onAdd={handleAdd}\n      />\n      <Table\n        data={data}\n        filterText={filterText}\n        onSave={handleSave}\n        onDelete={handleDelete}\n        newRow={newRow}\n      />\n    </div>\n  );\n}\n\nexport default DataTable;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACG,WAAW,CAAC;EAC7C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1C,SAASc,UAAUA,CAAC;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAI,CAAC,EAAE;IACrC,IAAIF,EAAE,KAAK,KAAK,EAAE;MAChB,MAAMG,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGZ,IAAI,CAACa,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACP,EAAE,CAAC,CAAC;MACtD,MAAMQ,KAAK,GAAGL,KAAK,GAAG,CAAC;MACvBT,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAEO,EAAE,EAAEQ,KAAK;QAAEP,IAAI;QAAEC;MAAI,CAAC,CAAC,CAAC;MAC5CJ,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM;MACL,MAAMW,WAAW,GAAGhB,IAAI,CAACa,GAAG,CAAEC,IAAI,IAChCA,IAAI,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAEA,EAAE;QAAEC,IAAI;QAAEC;MAAI,CAAC,GAAGK,IACvC,CAAC;MACDb,OAAO,CAACe,WAAW,CAAC;IACtB;EACF;EAEA,SAASC,YAAYA,CAACV,EAAE,EAAE;IACxB,IAAIA,EAAE,KAAK,KAAK,EAAE;MAChBF,SAAS,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM;MACL,MAAMa,YAAY,GAAGlB,IAAI,CAACmB,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACP,EAAE,KAAKA,EAAE,CAAC;MAC1DN,OAAO,CAACiB,YAAY,CAAC;IACvB;EACF;EAEA,SAASE,SAASA,CAAA,EAAG;IACnBf,SAAS,CAAC;MAAEE,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC,CAAC;EAC7C;EAEA,oBACEZ,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACH,OAAO;MACNQ,UAAU,EAAEA,UAAW;MACvBoB,kBAAkB,EAAEnB,aAAc;MAClCoB,KAAK,EAAEH;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF9B,OAAA,CAACJ,KAAK;MACJO,IAAI,EAAEA,IAAK;MACXE,UAAU,EAAEA,UAAW;MACvB0B,MAAM,EAAEtB,UAAW;MACnBuB,QAAQ,EAAEZ,YAAa;MACvBb,MAAM,EAAEA;IAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAhDQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAkDlB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}